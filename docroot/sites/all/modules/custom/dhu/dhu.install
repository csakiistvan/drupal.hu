<?php

/**
 * @file
 * Install, update and uninstall functions for the Drupal.hu module.
 */

/**
 * Implements hook_update_dependencies().
 */
function dhu_update_dependencies() {
  return array(
    'dhu' => array(
      7107 => array(
        'geofield' => 7202,
      ),
    ),
  );
}

/**
 * Implements hook_update_N().
 *
 * Disable modules: geocode.
 */
function dhu_update_7101(&$sandbox) {
  $messages = array();

  $modules_to_disable = array('geocode');
  module_disable($modules_to_disable);
  $messages[] = t('Disable modules: @modules.', array(
      '@modules' => implode(', ', $modules_to_disable),
  ));

  return implode('<br />', $messages);
}

/**
 * Implements hook_update_N().
 */
function dhu_update_7102(&$sandbox) {
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('filename', 'profiles/standard/standard.profile')
    ->execute();

  return t('Issue #1170360 - Undefined index: distribution_name in drupal_install_profile_distribution_name()');
}

/**
 * Implements hook_update_N().
 */
function dhu_update_7103(&$sandbox) {
  //////////////////////////////////
  // Feed API uninstall
  // https://github.com/drupalhu/drupal.hu/issues/76
  //////////////////////////////////

  $tables_to_drop = array('feedapi', 'feedapi_stat', 'feedapi_node_item', 'feedapi_node_item_feed', 'parser_common_syndication');
  foreach ($tables_to_drop as $table) {
    if (db_table_exists($table)) {
      db_drop_table($table);
    }
  }

  // Delete variables site-wide
  variable_del('feedapi_allowed_html_tags');
  variable_del('feedapi_allow_html_all');
  variable_del('feedapi_cron_percentage');

  // Delete variables per-content-type
  $types = db_query('SELECT * FROM {node_type}')->fetchAllAssoc('type', PDO::FETCH_OBJ);
  foreach ($types as $type => $data) {
    variable_del('feedapi_settings_'. $type);
  }

  // Empty parser common syndication cache directory.
  $cache_dir = variable_get('parser_common_syndication_cache', FALSE);
  if (is_dir($cache_dir)) {
    $dp = opendir($cache_dir);
    while (($file = readdir($dp)) !== FALSE) {
      if (is_file($file)) {
        unlink($cache_dir .'/'. $file);
      }
    }
    closedir($dp);
    rmdir($cache_dir);
  }
  variable_del('parser_common_syndication_cache');

  // Empty parser simplepie cache directory
  $cache_dir = variable_get('parser_simplepie_cache', FALSE);
  if (is_dir($cache_dir)) {
    $dp = opendir($cache_dir);
    while (($file = readdir($dp)) !== FALSE) {
      if (is_file($file)) {
        unlink($cache_dir .'/'. $file);
      }
    }
    closedir($dp);
    rmdir($cache_dir);
  }
  variable_del('parser_simplepie_cache');

  // Emtpy global variables
  variable_del('feedapi_settings_feed');
  menu_rebuild();
}

/**
 * Implements hook_update_N().
 */
function dhu_update_7104() {
  $modules_to_enable = array('memcache');
  module_enable($modules_to_enable);
}

/**
 * Enable admin_views module, issue-175.
 */
function dhu_update_7105() {
  $modules_to_enable = array('admin_views');
  module_enable($modules_to_enable);
}
/**
 * Enable the recaptcha module, issue-189.
 */
function dhu_update_7106() {
    $modules_to_enable = array('recaptcha');
      module_enable($modules_to_enable);
}

/**
 * Revert all OpenLayers layers and maps; Enable the "Drupal.hu Event" module.
 */
function dhu_update_7107() {
  $messages = array();

  foreach (openlayers_layers_load() as $layer) {
    openlayers_layer_delete($layer);
  }
  $messages[] = t('All OpenLayers layers has been reverted to default state.');

  foreach (openlayers_maps() as $map) {
    openlayers_map_delete($map);
  }
  $messages[] = t('Revert all OpenLayers maps has been reverted to default state.');

  module_enable(array('dhu_event'));

  return implode('<br />', $messages);
}

/**
 * Uninstall PHP module.
 */
function dhu_update_7108(&$sandbox) {
  $messages = array();

  module_disable(array('php'));
  $messages[] = t('The PHP module has been disabled.');

  drupal_uninstall_modules(array('php'));
  $messages[] = t('The PHP module has been uninstalled.');

  db_delete('filter_format')
    ->condition('format', 'php_code')
    ->execute();

  db_delete('filter')
    ->condition('module', 'php')
    ->execute();

  return implode((drupal_is_cli() ? PHP_EOL : '<br />'), $messages);
}

/**
<<<<<<< 76bbe0a8008e39139f8dd4285031d1029b056780
 * Revert feature to redesign.
 */
function dhu_update_7110() {
  $modules_to_enable = array('jquery_update');
  module_enable($modules_to_enable);

  features_include();
  $modules = array(
    'drupalhu_links',
  );

  foreach ($modules as $module) {
    features_revert_module($module);
  }
=======
 * Disable Browserclass module.
 */
function dhu_update_7109(&$sandbox) {
  module_disable(array(
    'browserclass',
  ));
>>>>>>> Issue #292 - Disable Browserclass module
}

/**
 * Revert feature to redesign.
 */
function dhu_update_7110() {
  $modules_to_enable = array('jquery_update');
  module_enable($modules_to_enable);

  features_include();
  $modules = array(
    'drupalhu_links',
  );

  foreach ($modules as $module) {
    features_revert_module($module);
  }
}

/**
 * Revert feature to redesign.
 */
function dhu_update_7110() {
  $modules_to_enable = array('jquery_update');
  module_enable($modules_to_enable);

  features_include();
  $modules = array(
    'drupalhu_links',
  );

  foreach ($modules as $module) {
    features_revert_module($module);
  }
}
